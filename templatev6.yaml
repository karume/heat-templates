heat_template_version: 2013-05-23

description: >
  Continous Delivery on OSt for Midonet

parameters:
  name:
    type: string
    description: Name or prefix for the deployment
    default: cdpuppet
  key_name:
    type: string
    default: QA
  flavor:
    type: string
    default: m0.medium
  master_image:
    type: string
    default: 1ebcca58-e8c8-4dff-afa3-72aab08a87ca
  bgp_image:
    type: string
    default: 1ebcca58-e8c8-4dff-afa3-72aab08a87ca
  image:
    type: string
    default: 1ebcca58-e8c8-4dff-afa3-72aab08a87ca
  public_net:
    type: string
    description: public network id
    default: external

resources:
  traffic_network:
        type: OS::Neutron::Net
        properties:
          name: traffic_network
  traffic_subnet:
        type: OS::Neutron::Subnet
        properties:
          network_id: { get_resource: traffic_network }
          cidr: 10.1.2.0/24
          gateway_ip: 10.1.2.1


  router1:
        type: OS::Neutron::Router
        properties:
          external_gateway_info:
                network: { get_param: public_net }
  router1_interface:
        type: OS::Neutron::RouterInterface
        properties:
          router_id: { get_resource: router1 }
          subnet_id: { get_resource: traffic_subnet }
  server_security_group:
    type: OS::Neutron::SecurityGroup
    properties:
      description: Add security group rules for server
      name: security-group
      rules:
        - remote_ip_prefix: 0.0.0.0/0
          protocol: tcp
          port_range_min: 22
          port_range_max: 22
        - remote_ip_prefix: 0.0.0.0/0
          protocol: tcp
          port_range_min: 80
          port_range_max: 80
        - remote_ip_prefix: 0.0.0.0/0
          protocol: icmp
  #-------------------------------------------
  # master: puppetmaster and salt-master setup
  #-------------------------------------------
  master:
    type: OS::Nova::Server
    properties:
      name: master
      key_name: { get_param: key_name }
      image: { get_param: master_image }
      #flavor: { get_param: flavor }
      flavor: m1.large
      networks:
        - port: { get_resource: master_port0 }
      user_data_format: RAW
      user_data:
        str_replace:
          params:
            db_password: hola
          template: |
            #!/bin/bash
            #------------------------------------------------------------
            # Make sure it has a nameserver and $::fqdn will not be empty
            #------------------------------------------------------------
            cat >> /etc/resolv.conf << EOF
            nameserver 8.8.8.8
            search midokura.com
            EOF
            #-------------------------------------------------------------
            # Add its own hostname to /etc/hosts and also the puppetmaster
            # hostname
            # ------------------------------------------------------------
            cat >> /etc/hosts << EOF
            10.1.2.5 puppet master
            127.0.0.1 controller
            EOF
            #-------------------
            # updates the system
            #-------------------
            wget https://apt.puppetlabs.com/puppetlabs-release-trusty.deb
            dpkg -i puppetlabs-release-trusty.deb
            apt-get -y update
            update-locale LC_ALL="en_US.UTF-8"
            update-locale LANG="en_US.UTF-8"
            update-locale LC_CTYPE="en_US.UTF-8"
            #-------------------------------------------------------------
            # Install and configure salt-master before puppet is installed
            #-------------------------------------------------------------
            apt-get install -y salt-master
            service salt-master stop
            cat > /etc/salt/master << EOF
            interface: 0.0.0.0
            publish_port: 4505
            user: root
            open_mode: True
            auto_accept: True
            EOF
            service salt-master start
            #-----------------------------------
            # Install and configure puppetmaster
            #-----------------------------------
            apt-get install -y puppetmaster git
            service puppetmaster stop

            cat > /etc/puppet/puppet.conf << EOF
            [main]
            logdir=/var/log/puppet
            vardir=/var/lib/puppet
            ssldir=/var/lib/puppet/ssl
            rundir=/var/run/puppet
            factpath=$vardir/lib/facter
            templatedir=$confdir/templates
            dns_alt_names = puppet,master

            [master]
            # These are needed when the puppetmaster is run by passenger
            # and can safely be removed if webrick is used.
            ssl_client_header = SSL_CLIENT_S_DN
            ssl_client_verify_header = SSL_CLIENT_VERIFY
            ca=true
            autosign=true
            EOF

            cat > /etc/puppet/manifests/site.pp << MIDO_EOF
            \$zookeeper_servers = [{'id' => 1,
                                   'host' => '10.1.2.21'},
                                  {'id' => 2,
                                   'host' => '10.1.2.22'},
                                  {'id' => 3,
                                   'host' => '10.1.2.23'}]

            \$cassandra_seeds = [ '10.1.2.21', '10.1.2.22', '10.1.2.23' ]

            node default {
              include ntp
            }

            node 'master' {
              include ansible
            }

            node 'controller' {
              # midonet_api is already included in midonet_openstack::role::controller
              include midonet::midonet_cli
              include openstack::role::controller
              # include midonet::neutron_plugin
              # include openstack::role::controller
              # include openstack::role::storage
              # include openstack::role::network
            }

            node 'nsdb1.midokura.com' {
              class {'::midonet::zookeeper':
                servers   => \$zookeeper_servers,
                server_id => 1
              }

              class {'::midonet::cassandra':
                seeds        => \$cassandra_seeds,
                seed_address => '10.1.2.21'
              }
            }

            node 'nsdb2.midokura.com' {
              class {'::midonet::zookeeper':
                servers   => \$zookeeper_servers,
                server_id => 2
              }

              class {'::midonet::cassandra':
                seeds        => \$cassandra_seeds,
                seed_address => '10.1.2.22'
              }
            }

            node 'nsdb3.midokura.com' {
              class {'::midonet::zookeeper':
                servers   => \$zookeeper_servers,
                server_id => 3
            }

              class {'::midonet::cassandra':
                seeds        => \$cassandra_seeds,
                seed_address => '10.1.2.23'
              }
            }

            node /compute\d+/ {
              class { '::midonet::midonet_agent':
                cassandra_seeds => \$cassandra_seeds,
                zk_servers      => [
                  { 'ip' => '10.1.2.21'},
                  { 'ip' => '10.1.2.22'},
                  { 'ip' => '10.1.2.23'},
                ]
            }

              include openstack::role::compute
            }

            node /edge\d+/ {

              class { '::midonet::midonet_agent':
                cassandra_seeds => [ '10.1.2.21', '10.1.2.22', '10.1.2.23' ],
                zk_servers      => [
                  { 'ip' => '10.1.2.21'},
                  { 'ip' => '10.1.2.22'},
                  { 'ip' => '10.1.2.23'},
                ]
              }

              # include midonet::midonet_gateway ?? This doesn't exist
            }

            node 'bgp' {
              include openstack::role::tempest

            }
            MIDO_EOF

            cat > /etc/puppet/hiera.yaml << EOF
            ---
            :backends:
              - yaml
              - module_data
            :yaml:
              :datadir: /etc/puppet/hieradata
            :hierarchy:
              - common
              - "%{::clientcert}"
            EOF

            mkdir /etc/puppet/hieradata
            cat > /etc/puppet/hieradata/common.yaml << EOF
            ---

            ##### Common
            classes:
              - ntp

            openstack::region: 'openstack'

            ######## Networks
            openstack::network::api: '10.1.2.0/24'
            openstack::config::network_api: '10.1.2.0/24'
            openstack::network::external: '192.168.22.0/24'
            openstack::network::management: '10.1.2.0/24'
            openstack::config::network_management: '10.1.2.0/24'
            openstack::network::data: '10.1.2.0/24'

            openstack::network::external::ippool::start: 192.168.22.100
            openstack::network::external::ippool::end: 192.168.22.200
            openstack::network::external::gateway: 192.168.22.2
            openstack::network::external::dns: 192.168.22.2

            ######## Private Neutron Network

            openstack::network::neutron::private: '10.1.2.0/24'
            openstack::config::network_neutron_private: '10.1.2.0/24'

            ######## Fixed IPs (controllers)

            openstack::controller::address::api: '10.1.2.10'
            openstack::config::controller_address_api: '10.1.2.10'
            openstack::controller::address::management: '10.1.2.10'
            openstack::config::controller_address_management: '10.1.2.10'
            openstack::config::controller_address_api: '10.1.2.10'
            openstack::storage::address::api: "10.1.2.10"
            openstack::storage::address::management: '10.1.2.10'
            #openstack::config::keystone_admin_token: ''

            ######## Database

            openstack::mysql::root_password: 'testmido'
            openstack::mysql::service_password: 'testmido'
            openstack::mysql::allowed_hosts: ['localhost', '127.0.0.1', '172.16.33.%', '10.1.2.%']

            openstack::mysql::keystone::user: 'keystone'
            openstack::mysql::keystone::pass: 'testmido'

            openstack::mysql::glance::user: 'glance'
            openstack::mysql::glance::pass: 'testmido'
            openstack::glance::api_servers: ['10.1.2.10:9292']

            openstack::mysql::nova::user: 'nova'
            openstack::mysql::nova::pass: 'testmido'

            openstack::mysql::neutron::user: 'neutron'
            openstack::mysql::neutron::pass: 'testmido'

            ######## RabbitMQ

            openstack::rabbitmq::user: 'openstack'
            openstack::rabbitmq::password: 'testmido'
            openstack::rabbitmq::hosts: ['10.1.2.10:5672']

            ######## Keystone

            openstack::keystone::admin_token: 'testmido'
            openstack::keystone::admin_email: 'mido-dev@lists.midonet.org'
            openstack::keystone::admin_password: 'testmido'

            openstack::keystone::tenants:
                "midokura":
                    description: "Test tenant"

            openstack::keystone::users:
                "midogod":
                    password: "midogod"
                    tenant: "midokura"
                    email: "foo@midokura.com"
                    admin: true
                "midoguy":
                    password: "midoguy"
                    tenant: "midokura"
                    email: "bar@midokura.com"
                    admin: false
                "midonet":
                    password: 'testmido'
                    tenant: 'services'
                    email: "midonet@midokura.com"
                    admin: true
                "test":
                    password: 'testmido'
                    tenant: 'midokura'
                    email: "test@midokura.com"
                    admin: true
                "demo":
                    password: 'testmido'
                    tenant: 'midokura'
                    email: "test@midokura.com"
                    admin: true
                "demo2":
                    password: 'testmido'
                    tenant: 'midokura'
                    email: "test@midokura.com"
                    admin: true

            ######## Glance

            openstack::glance::password: 'midokura'

            ######## Cinder

            openstack::cinder::password: 'testmido'
            openstack::cinder::volume_size: '8G'

            ######## Swift

            openstack::swift::password: 'dexc-flo'
            openstack::swift::hash_suffix: 'pop-bang'

            ######## Nova

            openstack::nova::libvirt_type: 'qemu'
            openstack::nova::password: 'testmido'

            ######## Neutron

            openstack::neutron::password: 'testmido'
            openstack::neutron::shared_secret: 'testmido'
            openstack::neutron::core_plugin: 'midonet.neutron.plugin.MidonetPluginV2'
            openstack::neutron::service_plugins: []
            openstack::neutron::neutron_tunnel_type: ['gre']

            ######## Horizon

            openstack::horizon::secret_key: 'testmido'

            ######## Tempest

            openstack::images: {}
            openstack::tempest::configure_images    : true
            openstack::tempest::image_name          : 'Cirros'
            openstack::tempest::image_name_alt      : 'Cirros'
            openstack::tempest::username            : 'demo'
            openstack::tempest::username_alt        : 'demo2'
            openstack::tempest::username_admin      : 'test'
            openstack::tempest::configure_network   : true
            openstack::tempest::public_network_name : 'public'
            openstack::tempest::cinder_available    : false
            openstack::tempest::glance_available    : true
            openstack::tempest::horizon_available   : true
            openstack::tempest::nova_available      : true
            openstack::tempest::neutron_available   : true
            openstack::tempest::heat_available      : false
            openstack::tempest::swift_available     : false

            ######## Log levels
            openstack::verbose: 'True'
            openstack::debug: 'True'

            ######## Ceilometer
            openstack::ceilometer::address::management: '10.1.2.10'
            openstack::ceilometer::mongo::username: 'mongo'
            openstack::ceilometer::mongo::password: 'mongosecretkey123'
            openstack::ceilometer::password: 'whi-truz'
            openstack::ceilometer::meteringsecret: 'ceilometersecretkey'

            ######## Heat
            openstack::heat::password: 'zap-bang'
            openstack::heat::encryption_key: 'heatsecretkey123'

            ######## Midonet
            midonet::midonet_api::zk_servers:
                - ip: '10.1.2.21'
                - ip: '10.1.2.22'
                - ip: '10.1.2.23'
            midonet::midonet_api::vtep: true
            midonet::midonet_api::keystone_auth: true
            midonet::midonet_api::api_ip: '10.1.2.10'
            midonet::midonet_api::keystone_host: '10.1.2.10'
            midonet::midonet_api::keystone_port: 35357
            midonet::midonet_api::keystone_admin_token: 'arrakis'
            midonet::midonet_api::keystone_tenant_name: 'other-than-services'

            midonet::midonet_agent::zk_servers:
                - ip: '10.1.2.21'
                - ip: '10.1.2.22'
                - ip: '10.1.2.23'

            midonet::neutron_plugin::midonet_api_ip: '10.1.2.10'
            midonet::neutron_plugin::username: 'neutron'
            midonet::neutron_plugin::password: '32.kjaxT0k3na'
            midonet::neutron_plugin::project_id: 'service'

            EOF

            cat > /etc/puppet/hieradata/nsdb1.yaml << EOF
            ---
            zookeeper::id: '1'
            EOF

            cat > /etc/puppet/hieradata/nsdb2.yaml << EOF
            ---
            zookeeper::id: '2'
            EOF


            cat > /etc/puppet/hieradata/nsdb3.yaml << EOF
            ---
            zookeeper::id: '3'
            EOF

            #------------------------
            # Installs puppet modules
            #------------------------
            puppet module install midonet-midonet
            puppet module install karume-openstack
            puppet module install puppetlabs-ntp
            puppet module install nvogel-ansible
            puppet module upgrade puppetlabs-rabbitmq --force
            #------------------------------------------------------------
            # Starts puppetmaster service and runs puppet as a client for
            # the very first time
            # -----------------------------------------------------------
            rm -rf /var/lib/puppet/ssl/
            service puppetmaster start
            puppet plugin download
            apt-get install -y puppet
            sleep 120
            puppet agent —enable
            puppet agent -t
            # END
  master_port0:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: traffic_network }
      fixed_ips:
        - ip_address: 10.1.2.5

  # master_floating_ip:
  #       type: OS::Neutron::FloatingIP
  #       properties:
  #         floating_network_id: { get_param: public_net }
  #         port_id: { get_resource: master_port0 }
  # BGP
  bgp:
    type: OS::Nova::Server
    properties:
      name: bgp
      key_name: { get_param: key_name }
      image: { get_param: bgp_image }
      flavor: { get_param: flavor }
      networks:
        - port: { get_resource: bgp_port0 }
      user_data_format: RAW
      user_data:
        str_replace:
          params:
            db_password: hola
          template: |
            #!/bin/bash
            #------------------------------------------------------------
            # Make sure it has a nameserver and $::fqdn will not be empty
            #------------------------------------------------------------
            cat >> /etc/resolv.conf << EOF
            nameserver 8.8.8.8
            search midokura.com
            EOF
            #-------------------------------------------------------------
            # Add its own hostname to /etc/hosts and also the puppetmaster
            # hostname
            # ------------------------------------------------------------
            cat >> /etc/hosts << EOF
            10.1.2.5 puppet master
            127.0.0.1 bgp
            EOF
            #-------------------
            # updates the system
            #-------------------
            apt-get -y update
            update-locale LC_ALL="en_US.UTF-8"
            update-locale LANG="en_US.UTF-8"
            update-locale LC_CTYPE="en_US.UTF-8"
            #-------------------------------------------------------------
            # Install and configure salt-minion before puppet is installed
            #-------------------------------------------------------------
            apt-get -y install salt-minion
            cat > /etc/salt/minion << MIDO_EOF
            master: master
            master_port: 4506
            user: root
            pidfile: /var/run/salt-minion.pid
            root_dir: /
            id: bgp
            MIDO_EOF
            service salt-minion restart
            #-----------------------------
            # Install and configure quagga
            #-----------------------------
            apt-get install -y quagga
            ### Enable ip forwarding and NAT
            sysctl -w net.ipv4.ip_forward=1
            sysctl -p /etc/sysctl.conf
            iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE
            ### Set IP tunnels
            ip tunnel add edge1 mode gre remote 10.1.2.101 local 10.1.2.6 ttl 255
            ip link set edge1 up
            ip addr add 10.0.0.8/24 dev edge1
            ip tunnel add edge2 mode gre remote 10.1.2.101 local 10.1.2.6 ttl 255
            ip link set edge2 up
            ip addr add 10.0.1.8/24 dev edge1
            ### Configure quagga BGP daemon
            sed -i 's/zebra=no/zebra=yes/' /etc/quagga/daemons
            sed -i 's/bgpd=no/bgpd=yes/' /etc/quagga/daemons
            touch /etc/quagga/zebra.conf
            cat > /etc/quagga/bgpd.conf << EOF
            router bgp 65234
             bgp router-id 10.0.0.8
             network 0.0.0.0/0
             neighbor 10.0.0.7 remote-as 65432
             neighbor 10.0.1.7 remote-as 65432
            maximum-paths 2
            !
            line vty
            !
            EOF
            chown quagga:quagga /etc/quagga/*.conf
            service quagga restart
            sleep 120
            #---------------------------------------------------------------
            # Install puppet, enable the agent and run it for the first time
            #---------------------------------------------------------------
            apt-get install -y puppet
            sleep 120
            puppet agent --enable
            puppet agent -t
            #---------------------------------------------------------------
  bgp_port0:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: traffic_network }
      fixed_ips:
        - ip_address: 10.1.2.6
  # bgp_floating_ip:
  #       type: OS::Neutron::FloatingIP
  #       properties:
  #         floating_network_id: { get_param: public_net }
  #         port_id: { get_resource: bgp_port0 }

  # Controller
  controller:
    type: OS::Nova::Server
    properties:
      name: controller
      key_name: { get_param: key_name }
      image: { get_param: image }
#      flavor: m3.medium
      flavor: m1.large
      networks:
        - port: { get_resource: controller_port0 }
      user_data_format: RAW
      user_data:
        str_replace:
          params:
            db_password: hola
          template: |
            #!/bin/bash
            #------------------------------------------------------------
            # Make sure it has a nameserver and $::fqdn will not be empty
            #------------------------------------------------------------
            cat >> /etc/resolv.conf << EOF
            nameserver 8.8.8.8
            search midokura.com
            EOF
            #-------------------------------------------------------------
            # Add its own hostname to /etc/hosts and also the puppetmaster
            # hostname
            # ------------------------------------------------------------
            cat >> /etc/hosts << EOF
            10.1.2.5 puppet master
            127.0.0.1 controller
            EOF
            #-------------------
            # updates the system
            #-------------------
            apt-get -y update
            update-locale LC_ALL="en_US.UTF-8"
            update-locale LANG="en_US.UTF-8"
            update-locale LC_CTYPE="en_US.UTF-8"
            #-------------------------------------------------------------
            # Install and configure salt-minion before puppet is installed
            #-------------------------------------------------------------
            apt-get -y install salt-minion
            cat > /etc/salt/minion << MIDO_EOF
            master: master
            master_port: 4506
            user: root
            pidfile: /var/run/salt-minion.pid
            root_dir: /
            id: controller
            MIDO_EOF
            service salt-minion restart
            #---------------------------------------------------------------
            # Install puppet, enable the agent and run it for the first time
            #---------------------------------------------------------------
            apt-get install -y puppet
            sleep 120
            puppet agent --enable
            puppet agent -t
            #---------------------------------------------------------------
  controller_port0:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: traffic_network }
      fixed_ips:
        - ip_address: 10.1.2.10


  compute1:
    type: OS::Nova::Server
    properties:
      name: compute1
      key_name: { get_param: key_name }
      image: { get_param: image }
      flavor: { get_param: flavor }
      networks:
        - port: { get_resource: compute1_port0 }
      user_data_format: RAW
      user_data:
        str_replace:
          params:
            db_password: hola
          template: |
            #!/bin/bash
            #------------------------------------------------------------
            # Make sure it has a nameserver and $::fqdn will not be empty
            #------------------------------------------------------------
            cat >> /etc/resolv.conf << EOF
            nameserver 8.8.8.8
            search midokura.com
            EOF
            #-------------------------------------------------------------
            # Add its own hostname to /etc/hosts and also the puppetmaster
            # hostname
            # ------------------------------------------------------------
            cat >> /etc/hosts << EOF
            10.1.2.5 puppet master
            127.0.0.1 compute1
            EOF
            #-------------------
            # updates the system
            #-------------------
            apt-get -y update
            update-locale LC_ALL="en_US.UTF-8"
            update-locale LANG="en_US.UTF-8"
            update-locale LC_CTYPE="en_US.UTF-8"
            #-------------------------------------------------------------
            # Install and configure salt-minion before puppet is installed
            #-------------------------------------------------------------
            apt-get -y install salt-minion
            cat > /etc/salt/minion << MIDO_EOF
            master: master
            master_port: 4506
            user: root
            pidfile: /var/run/salt-minion.pid
            root_dir: /
            id: compute1
            MIDO_EOF
            service salt-minion restart
            #---------------------------------------------------------------
            # Install puppet, enable the agent and run it for the first time
            #---------------------------------------------------------------
            apt-get install -y puppet
            sleep 120
            puppet agent --enable
            puppet agent -t
            #---------------------------------------------------------------
  compute1_port0:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: traffic_network }
      fixed_ips:
        - ip_address: 10.1.2.31

  # Compute 2
  compute2:
    type: OS::Nova::Server
    properties:
      name: compute2
      key_name: { get_param: key_name }
      image: { get_param: image }
      flavor: { get_param: flavor }
      networks:
        - port: { get_resource: compute2_port0 }
      user_data_format: RAW
      user_data:
        str_replace:
          params:
            db_password: hola
          template: |
            #!/bin/bash
            #------------------------------------------------------------
            # Make sure it has a nameserver and $::fqdn will not be empty
            #------------------------------------------------------------
            cat >> /etc/resolv.conf << EOF
            nameserver 8.8.8.8
            search midokura.com
            EOF
            #-------------------------------------------------------------
            # Add its own hostname to /etc/hosts and also the puppetmaster
            # hostname
            # ------------------------------------------------------------
            cat >> /etc/hosts << EOF
            10.1.2.5 puppet master
            127.0.0.1 compute2
            EOF
            #-------------------
            # updates the system
            #-------------------
            apt-get -y update
            update-locale LC_ALL="en_US.UTF-8"
            update-locale LANG="en_US.UTF-8"
            update-locale LC_CTYPE="en_US.UTF-8"
            #-------------------------------------------------------------
            # Install and configure salt-minion before puppet is installed
            #-------------------------------------------------------------
            apt-get -y install salt-minion
            cat > /etc/salt/minion << MIDO_EOF
            master: master
            master_port: 4506
            user: root
            pidfile: /var/run/salt-minion.pid
            root_dir: /
            id: compute2
            MIDO_EOF
            service salt-minion restart
            #---------------------------------------------------------------
            # Install puppet, enable the agent and run it for the first time
            #---------------------------------------------------------------
            apt-get install -y puppet
            sleep 120
            puppet agent --enable
            puppet agent -t
            #---------------------------------------------------------------
  compute2_port0:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: traffic_network }
      fixed_ips:
        - ip_address: 10.1.2.32

  # NSDB 1
  nsdb1:
    type: OS::Nova::Server
    properties:
      name: nsdb1
      key_name: { get_param: key_name }
      image: { get_param: image }
      flavor: { get_param: flavor }
      networks:
        - port: { get_resource: nsdb1_port0 }
      user_data_format: RAW
      user_data:
        str_replace:
          params:
            db_password: hola
          template: |
            #!/bin/bash
            #------------------------------------------------------------
            # Make sure it has a nameserver and $::fqdn will not be empty
            #------------------------------------------------------------
            cat >> /etc/resolv.conf << EOF
            nameserver 8.8.8.8
            search midokura.com
            EOF
            #-------------------------------------------------------------
            # Add its own hostname to /etc/hosts and also the puppetmaster
            # hostname
            # ------------------------------------------------------------
            cat >> /etc/hosts << EOF
            10.1.2.5 puppet master
            127.0.0.1 nsdb1
            EOF
            #-------------------
            # updates the system
            #-------------------
            apt-get -y update
            update-locale LC_ALL="en_US.UTF-8"
            update-locale LANG="en_US.UTF-8"
            update-locale LC_CTYPE="en_US.UTF-8"
            #-------------------------------------------------------------
            # Install and configure salt-minion before puppet is installed
            #-------------------------------------------------------------
            apt-get -y install salt-minion
            cat > /etc/salt/minion << MIDO_EOF
            master: master
            master_port: 4506
            user: root
            pidfile: /var/run/salt-minion.pid
            root_dir: /
            id: nsdb1
            MIDO_EOF
            service salt-minion restart
            #---------------------------------------------------------------
            # Install puppet, enable the agent and run it for the first time
            #---------------------------------------------------------------
            apt-get install -y puppet
            sleep 120
            puppet agent --enable
            puppet agent -t
            #---------------------------------------------------------------
  nsdb1_port0:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: traffic_network }
      fixed_ips:
        - ip_address: 10.1.2.21

  # NSDB 2
  nsdb2:
    type: OS::Nova::Server
    properties:
      name: nsdb2
      key_name: { get_param: key_name }
      image: { get_param: image }
      flavor: { get_param: flavor }
      networks:
        - port: { get_resource: nsdb2_port0 }
      user_data_format: RAW
      user_data:
        str_replace:
          params:
            db_password: hola
          template: |
            #!/bin/bash
            #------------------------------------------------------------
            # Make sure it has a nameserver and $::fqdn will not be empty
            #------------------------------------------------------------
            cat >> /etc/resolv.conf << EOF
            nameserver 8.8.8.8
            search midokura.com
            EOF
            #-------------------------------------------------------------
            # Add its own hostname to /etc/hosts and also the puppetmaster
            # hostname
            # ------------------------------------------------------------
            cat >> /etc/hosts << EOF
            10.1.2.5 puppet master
            127.0.0.1 nsdb2
            EOF
            #-------------------
            # updates the system
            #-------------------
            apt-get -y update
            update-locale LC_ALL="en_US.UTF-8"
            update-locale LANG="en_US.UTF-8"
            update-locale LC_CTYPE="en_US.UTF-8"
            #-------------------------------------------------------------
            # Install and configure salt-minion before puppet is installed
            #-------------------------------------------------------------
            apt-get -y install salt-minion
            cat > /etc/salt/minion << MIDO_EOF
            master: master
            master_port: 4506
            user: root
            pidfile: /var/run/salt-minion.pid
            root_dir: /
            id: nsdb2
            MIDO_EOF
            service salt-minion restart
            #---------------------------------------------------------------
            # Install puppet, enable the agent and run it for the first time
            #---------------------------------------------------------------
            apt-get install -y puppet
            sleep 120
            puppet agent --enable
            puppet agent -t
            #---------------------------------------------------------------
  nsdb2_port0:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: traffic_network }
      fixed_ips:
        - ip_address: 10.1.2.22

  # NSDB 3
  nsdb3:
    type: OS::Nova::Server
    properties:
      name: nsdb3
      key_name: { get_param: key_name }
      image: { get_param: image }
      flavor: { get_param: flavor }
      networks:
        - port: { get_resource: nsdb3_port0 }
      user_data_format: RAW
      user_data:
        str_replace:
          params:
            db_password: hola
          template: |
            #!/bin/bash
            #------------------------------------------------------------
            # Make sure it has a nameserver and $::fqdn will not be empty
            #------------------------------------------------------------
            cat >> /etc/resolv.conf << EOF
            nameserver 8.8.8.8
            search midokura.com
            EOF
            #-------------------------------------------------------------
            # Add its own hostname to /etc/hosts and also the puppetmaster
            # hostname
            # ------------------------------------------------------------
            cat >> /etc/hosts << EOF
            10.1.2.5 puppet master
            127.0.0.1 nsdb3
            EOF
            #-------------------
            # updates the system
            #-------------------
            apt-get -y update
            update-locale LC_ALL="en_US.UTF-8"
            update-locale LANG="en_US.UTF-8"
            update-locale LC_CTYPE="en_US.UTF-8"
            #-------------------------------------------------------------
            # Install and configure salt-minion before puppet is installed
            #-------------------------------------------------------------
            apt-get -y install salt-minion
            cat > /etc/salt/minion << MIDO_EOF
            master: master
            master_port: 4506
            user: root
            pidfile: /var/run/salt-minion.pid
            root_dir: /
            id: nsdb3
            MIDO_EOF
            service salt-minion restart
            #---------------------------------------------------------------
            # Install puppet, enable the agent and run it for the first time
            #---------------------------------------------------------------
            apt-get install -y puppet
            sleep 120
            puppet agent --enable
            puppet agent -t
            #---------------------------------------------------------------
  nsdb3_port0:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: traffic_network }
      fixed_ips:
        - ip_address: 10.1.2.23

  # Edge 1
  edge1:
    type: OS::Nova::Server
    properties:
      name: edge1
      key_name: { get_param: key_name }
      image: { get_param: image }
      flavor: { get_param: flavor }
      networks:
        - port: { get_resource: edge1_port0 }
      user_data_format: RAW
      user_data:
        str_replace:
          params:
            db_password: hola
          template: |
            #!/bin/bash
            #------------------------------------------------------------
            # Make sure it has a nameserver and $::fqdn will not be empty
            #------------------------------------------------------------
            cat >> /etc/resolv.conf << EOF
            nameserver 8.8.8.8
            search midokura.com
            EOF
            #-------------------------------------------------------------
            # Add its own hostname to /etc/hosts and also the puppetmaster
            # hostname
            # ------------------------------------------------------------
            cat >> /etc/hosts << EOF
            10.1.2.5 puppet master
            127.0.0.1 edge1
            EOF
            #-------------------
            # updates the system
            #-------------------
            apt-get -y update
            update-locale LC_ALL="en_US.UTF-8"
            update-locale LANG="en_US.UTF-8"
            update-locale LC_CTYPE="en_US.UTF-8"
            #-------------------------------------------------------------
            # Install and configure salt-minion before puppet is installed
            #-------------------------------------------------------------
            apt-get -y install salt-minion
            cat > /etc/salt/minion << MIDO_EOF
            master: master
            master_port: 4506
            user: root
            pidfile: /var/run/salt-minion.pid
            root_dir: /
            id: edge1
            MIDO_EOF
            service salt-minion restart
            #---------------------------------------------------------------
            # Install puppet, enable the agent and run it for the first time
            #---------------------------------------------------------------
            apt-get install -y puppet
            sleep 120
            puppet agent --enable
            puppet agent -t
            #---------------------------------------------------------------
  edge1_port0:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: traffic_network }
      fixed_ips:
        - ip_address: 10.1.2.101


  # Edge 2
  edge2:
    type: OS::Nova::Server
    properties:
      name: edge2
      key_name: { get_param: key_name }
      image: { get_param: image }
      flavor: { get_param: flavor }
      networks:
        - port: { get_resource: edge2_port0 }
      user_data_format: RAW
      user_data:
        str_replace:
          params:
            db_password: hola
          template: |
            #!/bin/bash
            #------------------------------------------------------------
            # Make sure it has a nameserver and $::fqdn will not be empty
            #------------------------------------------------------------
            cat >> /etc/resolv.conf << EOF
            nameserver 8.8.8.8
            search midokura.com
            EOF
            #-------------------------------------------------------------
            # Add its own hostname to /etc/hosts and also the puppetmaster
            # hostname
            # ------------------------------------------------------------
            cat >> /etc/hosts << EOF
            10.1.2.5 puppet master
            127.0.0.1 edge2
            EOF
            #-------------------
            # updates the system
            #-------------------
            apt-get -y update
            update-locale LC_ALL="en_US.UTF-8"
            update-locale LANG="en_US.UTF-8"
            update-locale LC_CTYPE="en_US.UTF-8"
            #-------------------------------------------------------------
            # Install and configure salt-minion before puppet is installed
            #-------------------------------------------------------------
            apt-get -y install salt-minion
            cat > /etc/salt/minion << MIDO_EOF
            master: master
            master_port: 4506
            user: root
            pidfile: /var/run/salt-minion.pid
            root_dir: /
            id: edge2
            MIDO_EOF
            service salt-minion restart
            #---------------------------------------------------------------
            # Install puppet, enable the agent and run it for the first time
            #---------------------------------------------------------------
            apt-get install -y puppet
            sleep 120
            puppet agent --enable
            puppet agent -t
            #---------------------------------------------------------------
  edge2_port0:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: traffic_network }
      fixed_ips:
        - ip_address: 10.1.2.102


outputs:
  # master_public_ip:
  #       description: Floating IP address of master
  #       value: { get_attr: [ master_floating_ip, floating_ip_address ] }
  # bgp_public_ip:
  #       description: Floating IP address of bgp
  #       value: { get_attr: [ bgp_floating_ip, floating_ip_address ] }
### TODO
# Add parameters to select:
# openstack release
# installer: puppet or ansible
# midonet version
# ansible puppet configuration on all nodes
